{"version":3,"sources":["contexts/AuthContext/AuthContext.js","contexts/Firebase/base.js","contexts/Firebase/BaseContext.js","components/Home/Home.jsx","components/Private/Private.jsx","components/PrivateRoute.js","components/App/App.jsx","index.js"],"names":["AuthContext","React","createContext","AuthContextProvider","props","useState","user","setUser","useEffect","app","auth","onAuthStateChanged","userDetails","Provider","value","children","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Firebase","signUserIn","a","provider","TwitterAuthProvider","signInWithPopup","then","console","log","credential","secret","accessToken","this","app2","initializeApp","token","BaseContext","BaseContextProvider","Home","useContext","firebase","onClick","Private","signOut","PrivateRoute","RouteComponent","component","rest","render","routeProps","to","App","path","exact","ReactDOM","document","getElementById"],"mappings":"kPAGaA,EAAcC,IAAMC,cAAc,MAElCC,EAAsB,SAACC,GAAW,IAAD,EAElBC,mBAAS,MAFS,mBAEnCC,EAFmC,KAE7BC,EAF6B,KAU1C,OANAC,qBAAU,WACNC,IAAIC,OAAOC,oBAAmB,SAACC,GAC3BL,EAAQK,QAEb,IAGC,cAACZ,EAAYa,SAAb,CAAsBC,MAAOR,EAA7B,SACKF,EAAMW,Y,QCdbC,G,MAAiB,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAsBIC,EAlBX,aAAe,yBAMfC,WANc,sBAMD,4BAAAC,EAAA,sDACHC,EAAW,IAAIjB,IAAIC,KAAKiB,oBAC9BlB,IAAIC,OAAOkB,gBAAgBF,GAC1BG,MAAK,SAACvB,GACLwB,QAAQC,IAAIzB,EAAK0B,WAAWC,QAC9BH,QAAQC,IAAIzB,EAAK0B,WAAWE,gBALnB,2CALTC,KAAKC,KAAO3B,IAAI4B,cAAcrB,GAC9BmB,KAAKG,MAAM,GACXH,KAAKF,OAAO,ICbPM,EAActC,IAAMC,cAAc,MAElCsC,EAAsB,SAACpC,GAChC,OACI,cAACmC,EAAY1B,SAAb,CAAsBC,MAAO,IAAIS,EAAjC,SACKnB,EAAMW,YCkBJ0B,EApBF,WAEIC,qBAAW1C,GAAxB,IACM2C,EAAWD,qBAAWH,GAHb,4CAKf,sBAAAd,EAAA,sEACUkB,EAASnB,aADnB,4CALe,sBASf,OACI,8BACG,gCACS,2CACA,wBAAQoB,QAbT,2CAaC,wCCGLC,EAhBC,WAECH,qBAAW1C,GAFN,4CAIlB,sBAAAyB,EAAA,sEACUhB,IAAIC,OAAOoC,UADrB,4CAJkB,sBAQlB,OACI,gCACI,8CACA,wBAAQF,QAXE,2CAWV,0B,gBCQGG,EArBM,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAA8BC,EAAW,6BAEvD5C,EAAOoC,qBAAW1C,GAExB,OACI,cAAC,IAAD,2BAEQkD,GAFR,IAGIC,OAAQ,SAAAC,GAAU,OAChB9C,EACE,cAAC0C,EAAD,eAAoBI,IAEpB,cAAC,IAAD,CAAUC,GAAI,WCDfC,EATH,WACR,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACP,UAAWR,IACjC,cAAC,EAAD,CAAcc,KAAK,WAAWC,OAAK,EAACP,UAAWJ,QCH3DY,IAASN,OACT,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,QAGNO,SAASC,eAAe,W","file":"static/js/main.31c7900c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport app from \"firebase/app\";\r\n\r\nexport const AuthContext = React.createContext(null);\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged((userDetails) => {\r\n            setUser(userDetails);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <AuthContext.Provider value={user}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n} ","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD80SxwHT8mPkdHH7tBfqhTqk9zzHLxTCI\",\r\n    authDomain: \"webhook-5de83.firebaseapp.com\",\r\n    projectId: \"webhook-5de83\",\r\n    storageBucket: \"webhook-5de83.appspot.com\",\r\n    messagingSenderId: \"228260902292\",\r\n    appId: \"1:228260902292:web:896d2a192afaae3d18cb81\"\r\n  };\r\n\r\nclass Firebase{\r\n    constructor() {\r\n        this.app2 = app.initializeApp(firebaseConfig);\r\n        this.token='';\r\n        this.secret='';\r\n    }\r\n\r\n    signUserIn = async() => {\r\n        const provider = new app.auth.TwitterAuthProvider();\r\n        app.auth().signInWithPopup(provider)\r\n        .then((user) => {\r\n          console.log(user.credential.secret);\r\n        console.log(user.credential.accessToken);\r\n        })\r\n}\r\n\r\n}\r\n\r\n\r\nexport default Firebase;","import React from \"react\";\r\nimport Firebase from \"./base\";\r\n\r\nexport const BaseContext = React.createContext(null);\r\n\r\nexport const BaseContextProvider = (props) => {\r\n    return(\r\n        <BaseContext.Provider value={new Firebase()}>\r\n            {props.children}\r\n        </BaseContext.Provider>\r\n    )\r\n}","import { useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../contexts/AuthContext/AuthContext\";\r\nimport { BaseContext } from \"../../contexts/Firebase/BaseContext\";\r\n\r\nconst Home = () => {\r\n\r\n    const user = useContext(AuthContext);\r\n    const firebase = useContext(BaseContext);\r\n\r\n    async function signIn(){\r\n        await firebase.signUserIn();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n           <div>\r\n                    <h1>Home page</h1>\r\n                    <button onClick={signIn}>Sign in with Twitter</button>\r\n                </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport app from \"firebase/app\";\r\n\r\nimport { AuthContext } from \"../../contexts/AuthContext/AuthContext\";\r\n\r\nconst Private = () => {\r\n\r\n    const user = useContext(AuthContext);\r\n\r\n    async function signOut(){\r\n        await app.auth().signOut();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Private page</h1>\r\n            <button onClick={signOut}>Sign out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Private;","import { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../contexts/AuthContext/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n\r\n    const user = useContext(AuthContext);\r\n\r\n    return(\r\n        <Route\r\n        \r\n            {...rest}\r\n            render={routeProps =>\r\n            !!user ? (\r\n                <RouteComponent {...routeProps} />\r\n            ) : (\r\n                <Redirect to={\"/\"} />\r\n            )\r\n            }\r\n\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default PrivateRoute;","import { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"../Home/Home\";\r\nimport Private from \"../Private/Private\";\r\nimport PrivateRoute from '../PrivateRoute';\r\n\r\nconst App = () => {\r\n    return(\r\n        <Router>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <PrivateRoute path=\"/private\" exact component={Private} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\n\r\nimport { AuthContextProvider } from \"./contexts/AuthContext/AuthContext\";\r\nimport { BaseContextProvider } from \"./contexts/Firebase/BaseContext\";\r\n\r\nReactDOM.render(\r\n<BaseContextProvider>\r\n    <AuthContextProvider>\r\n        <App />\r\n    </AuthContextProvider>\r\n</BaseContextProvider>\r\n, document.getElementById(\"root\"));"],"sourceRoot":""}